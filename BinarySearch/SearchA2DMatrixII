class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m=matrix.size();
        if(m==0)
            return false;
        int n=matrix[0].size();
        if(n==0)
            return false;
        int row=0;
        int left=0;
        int right=n;
        while(row<m){
            int g=_greater(matrix[row],left,right,target);
            if(g==right){
                if(g && matrix[row][g-1]==target){
                    return true;
                }
                ++row;
                continue;
            }
            if(g==0)
                return false;
            if(matrix[row][g-1]==target)
                return true;
            ++row;
            right=g;
        }
        return false;
        
    }
    
private:
    //返回第一个大于的index
    int _greater(vector<int>&vec,int left, int right,int target){
        while(left<right){
            int mid=left+((right-left)>>1);
            if(vec[mid]>target){
                right=mid;
            }
            else{
                left=mid+1;
            }
        }
        return right;
    }
};
