/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 *两种方式的时间几乎无几
 */

class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode head(0);
        ListNode*pre=&head;
        int sum=0;
        int cur=0;
        
        while(l1||l2){
            /*采用合并循环方式*/
            cur=sum+(l1?l1->val:0)+(l2?l2->val:0);
            ListNode*now=new ListNode(cur%10);
            sum=cur/10;
            
            pre->next=now;
            pre=now;
            l1=l1?l1->next:l1;
            l2=l2?l2->next:l2;
        }
        /*采用分开循环的方式*/
        /*
        while(l1&&l2){
            cur=sum+l1->val+l2->val;
            if(cur>9){
                sum=1;
                cur=cur-10;
            }
            else
                sum=0;
            ListNode*now=new ListNode(cur);
            pre->next=now;
            
            pre=now;
            l1=l1->next;
            l2=l2->next;
        }
        
        while(l1){
            cur=sum+l1->val;
            if(cur>9){
                sum=1;
                cur=cur-10;
            }
            else
                sum=0;
            ListNode*now=new ListNode(cur);
            pre->next=now;
            
            pre=now;
            l1=l1->next;
        }
        
        while(l2){
            cur=sum+l2->val;
            if(cur>9){
                sum=1;
                cur=cur-10;
            }
            else
                sum=0;
            ListNode*now=new ListNode(cur);
            pre->next=now;
            
            pre=now;
            l2=l2->next;
        }
        */
        /*还要考虑sum非零，进位的情况*/
        if(sum)
            pre->next=new ListNode(1);
        
        return head.next;
    }
};
