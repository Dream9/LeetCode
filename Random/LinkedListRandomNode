/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    /** @param head The linked list's head.
        Note that the head is guaranteed to be not null, so it contains at least one node. */
    Solution(ListNode* head):_head(head) {
        
    }
    
    /** Returns a random node's value. */
    int getRandom() {
        //由于time的精度限制，导致在极短时间内设置的种子结果是一样的
        //srand(time(NULL));//可以放到构造函数里面去。。。
        ListNode*cur=_head;
        ListNode*out=cur;
        int count=1;
        while(cur){
            if(rand()%count==0)
                out=cur;
            cur=cur->next;
            ++count;
        }
        return out->val;
    }
private:
    ListNode* _head;
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution* obj = new Solution(head);
 * int param_1 = obj->getRandom();
 */
