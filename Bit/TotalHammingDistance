class Solution {
public:
    int totalHammingDistance(vector<int>& nums) {
        //统计每一位的0，1分布即可
        int len=nums.size();
        if(len<=1)
            return 0;
        
        //更新每一个数字的每一个位的1置为情况
        //注意bit已经超出该数字后可以剪枝
        vector<int>notes(32,0);
        int max_bit=1;
        for(int cur:nums){
            int tmp=0x1;
            int bit=0;
            while(tmp<=cur){
                if(tmp&cur){
                    ++notes[bit];
                }
                ++bit;
                tmp<<=1;
            }
            max_bit=max(max_bit,bit);
        }
        
        //统计差异即可
        int out=0;
        for(int i=0;i<max_bit;++i){
            out+=notes[i]*(len-notes[i]);
        }
        
        return out;
         
        
        
    }
};
