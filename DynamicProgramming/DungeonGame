class Solution {
public:
    int calculateMinimumHP(vector<vector<int>>& dungeon) {
        /*动态规划*/
        int m=dungeon.size();
        if(m==0)
            return 0;
        int n=dungeon[0].size();
        if(n==0)
            return 0;
        vector<vector<int>> dp(m,vector<int>(n,0));
        dp[m-1][n-1]=max(1,1-dungeon[m-1][n-1]);
        for(int i=m-2;i>=0;--i){
            dp[i][n-1]=max(1,dp[i+1][n-1]-dungeon[i][n-1]);
        }
        for(int i=n-2;i>=0;--i){
            dp[m-1][i]=max(1,dp[m-1][i+1]-dungeon[m-1][i]);
        }
        
        for(int i=m-2;i>=0;--i){
            for(int j=n-2;j>=0;--j){
                dp[i][j]=max(1,min(dp[i][j+1],dp[i+1][j])-dungeon[i][j]);
            }
        }
        return dp[0][0];
    }
};
