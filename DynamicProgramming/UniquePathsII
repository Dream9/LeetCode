class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int m=obstacleGrid.size();
        int n=obstacleGrid[0].size();
        //使用int32_t会溢出。。。
        vector<vector<uint64_t>>dp(m,vector<uint64_t>(n,1));
        //初始化边界条件
        for(int i=0;i<m;++i)
            if(obstacleGrid[i][0]){
                while(i<m){
                    dp[i][0]=0;
                    ++i;
                }
            }
         for(int i=0;i<n;++i)
            if(obstacleGrid[0][i]){
                while(i<n){
                    dp[0][i]=0;
                    ++i;
                }
            }
            
            
        for(int i=1;i<m;++i){
            for(int j=1;j<n;++j){
                dp[i][j]=obstacleGrid[i][j]==1?0:dp[i-1][j]+dp[i][j-1];
            }
        }
        return dp[m-1][n-1];
    }
};
